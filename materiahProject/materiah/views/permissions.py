from rest_framework.permissions import BasePermission


class ProfileTypePermission(BasePermission):
    """
    ProfileTypePermission

    This class is a custom permission class that checks if the user has a specific profile type.

    Methods:
        - has_permission
    """

    def has_permission(self, request, view):
        """
        Checks if the user has permission to access a particular view.

        :param request: The request object generated by the user.
        :param view: The view object to be accessed.
        :return: Returns True if the user has permission, else False.
        """
        request.is_supplier = hasattr(request.user, 'supplieruserprofile')

        return True


class DenySupplierProfile(BasePermission):
    """This class represents a permission class that denies access to supplier profiles. It is a subclass of the `BasePermission` class.

    :class: `DenySupplierProfile`


    Methods:
    - has_permission
    """

    def has_permission(self, request, view):
        """
        Check if the user has permission to access a certain view.

        :param request: the request object representing the user's request
        :type request: HttpRequest
        :param view: the view object representing the target view
        :type view: View
        :return: True if the user has the permission, otherwise False
        :rtype: bool
        """
        return hasattr(request.user, 'userprofile')
